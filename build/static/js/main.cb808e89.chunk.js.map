{"version":3,"sources":["components/Header.js","components/Container.js","hooks/useLoading.js","queries/index.js","components/BookmarkCreate.js","components/Loading.js","components/BookmarkUpdate.js","components/BookmarkDelete.js","components/BookmarkLike.js","components/BookmarkItem.js","components/BookmarkList.js","components/App.js","index.js"],"names":["Header","react_default","a","createElement","className","Link","to","Container","_ref","children","components_Header","useLoading","classList","arguments","length","undefined","_useState","useState","_useState2","Object","slicedToArray","loadingButton","isLoading","_loadingButton$classL","_loadingButton$classL2","disabled","add","apply","toConsumableArray","remove","ADD_BOOKMARK","gql","_templateObject","GET_BOOKMARKS","_templateObject2","DELETE_BOOKMARK","_templateObject3","GET_BOOKMARK","_templateObject4","BOOKMARK_LIKE","_templateObject5","UPDATE_BOOKMARK","_templateObject6","BookmarkCreate","props","_useLoading","_useLoading2","setLoadingButton","setLoadingState","content","setContent","react_apollo_browser_umd","mutation","update","cache","addBookmark","data","bookmarks","readQuery","query","writeQuery","concat","objectSpread","likes","e","onSubmit","preventDefault","variables","autoCorrect","autoCapitalize","type","onChange","target","value","ref","Loading","BookmarkUpdate","bookmark","id","_ref2","loading","error","components_Loading","refetchQueries","updateBookmark","placeholder","DeleteBookmark","deleteBookmark","filter","onClick","ID","BookmarkLike","likeBookmark","forEach","optimisticResponse","__typename","BookmarkItem","onUpdate","components_BookmarkLike","href","BookmarkDelete","BookmarkList","message","Fragment","map","components_BookmarkItem","assign","key","history","push","style","float","App","HashRouter","components_Container","Route","exact","path","component","render","components_BookmarkUpdate","match","params","InMemoryCache","dataIdFromObject","object","client","ApolloClient","uri","Root","components_App","ReactDOM","src_Root","document","querySelector"],"mappings":"mOAgBeA,EAbA,kBACbC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACZH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,KAAT,SAEFL,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACZH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,kBAAT,cCDOC,EANG,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,SAAH,OAChBR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAACO,EAAD,MACCD,4BCJUE,EAAA,WAAwB,IAArBC,GAAqBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAP,IAAdD,UAAqBI,EACKC,mBAAS,MADdC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAC9BK,EAD8BH,EAAA,GAQrC,MAAO,CAR8BA,EAAA,GAEb,SAAAI,GAAa,IAAAC,EAAAC,EACnCH,EAAcI,SAAWH,EACzBA,GACIC,EAAAF,EAAcT,WAAUc,IAAxBC,MAAAJ,EAAAJ,OAAAS,EAAA,EAAAT,CAA+BP,KAC/BY,EAAAH,EAAcT,WAAUiB,OAAxBF,MAAAH,EAAAL,OAAAS,EAAA,EAAAT,CAAkCP,ojCCN1C,IAAMkB,EAAeC,IAAHC,KASZC,EAAgBF,IAAHG,KAUbC,EAAkBJ,IAAHK,KAQfC,EAAeN,IAAHO,KAUZC,EAAgBR,IAAHS,KASbC,EAAkBV,IAAHW,KCcNC,EA1DQ,SAAAC,GAAS,IAAAC,EACclC,EAAW,CACrDC,UAAW,CAAC,aAAc,eAFEkC,EAAA3B,OAAAC,EAAA,EAAAD,CAAA0B,EAAA,GACvBE,EADuBD,EAAA,GACLE,EADKF,EAAA,GAAA9B,EAIAC,mBAAS,IAJTC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAIvBiC,EAJuB/B,EAAA,GAIdgC,EAJchC,EAAA,GAM9B,OACEjB,EAAAC,EAAAC,cAACgD,EAAA,SAAD,CACEC,SAAUtB,EACVuB,OAAQ,SAACC,EAAD9C,GAAsC,IAApB+C,EAAoB/C,EAA5BgD,KAAQD,YACxB,IAAI,IACME,EAAcH,EAAMI,UAAU,CAAEC,MAAO1B,IAAvCwB,UACRH,EAAMM,WAAW,CACfD,MAAO1B,EACPuB,KAAM,CAAEC,UAAWA,EAAUI,OAAO,CAAC1C,OAAA2C,EAAA,EAAA3C,CAAA,GAAKoC,EAAN,CAAmBQ,MAAO,SAEhE,MAAOC,IANT,QAQEhB,GAAgB,MAInB,SAAAO,GAAW,OACVtD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,wBAAd,gBACAH,EAAAC,EAAAC,cAAA,QACE8D,SAAU,SAAAD,GACRA,EAAEE,iBACFlB,GAAgB,GAChBO,EAAY,CAAEY,UAAW,CAAElB,aAC3BC,EAAW,MAGbjD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,SACEiE,YAAY,QACZC,eAAe,QACfjE,UAAU,QACVkE,KAAK,OACLC,SAAU,SAAAP,GAAC,OAAId,EAAWc,EAAEQ,OAAOC,YAIzCxE,EAAAC,EAAAC,cAAA,UACEC,UAAU,kBACVkE,KAAK,SACLI,IAAK3B,GAHP,eC5CG4B,EAFC,kBAAM1E,EAAAC,EAAAC,cAAA,KAAGC,UAAU,qBAAb,YCkEPwE,EA9DQ,SAAApE,GAAkB,IAAfqE,EAAerE,EAAfqE,SAAehC,EACKlC,EAAW,CACrDC,UAAW,CAAC,aAAc,eAFWkC,EAAA3B,OAAAC,EAAA,EAAAD,CAAA0B,EAAA,GAChCE,EADgCD,EAAA,GACdE,EADcF,EAAA,GAAA9B,EAITC,mBAAS,IAJAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAIhCiC,EAJgC/B,EAAA,GAIvBgC,EAJuBhC,EAAA,GAMvC,OACEjB,EAAAC,EAAAC,cAACgD,EAAA,MAAD,CAAOQ,MAAOtB,EAAc8B,UAAW,CAAEW,GAAID,EAASC,KACnD,SAAAC,GAA4C,IAAzCC,EAAyCD,EAAzCC,QAASC,EAAgCF,EAAhCE,MAAeJ,EAAiBE,EAAzBvB,KAAQqB,SAC1B,OAAIG,EAAgB/E,EAAAC,EAAAC,cAAC+E,EAAD,MAChBD,EAAO,WAAApB,OAAkBoB,GAE3BhF,EAAAC,EAAAC,cAACgD,EAAA,SAAD,CACEC,SAAUX,EACV0C,eAAgB,CAAC,CAAExB,MAAO1B,IAC1BoB,OAAQ,kBAAML,GAAgB,KAE7B,SAAAoC,GACC,OACEnF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,wBAAd,mBACAH,EAAAC,EAAAC,cAAA,QACE8D,SAAU,SAAAD,GACRA,EAAEE,iBACFkB,EAAe,CACbjB,UAAW,CAAEW,GAAID,EAASC,GAAI7B,aAEhCD,GAAgB,GAChB6B,EAAS5B,QAAUA,EACnBC,EAAW,MAGbjD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,SACEiE,YAAY,QACZC,eAAe,QACfjE,UAAU,QACVkE,KAAK,OACLe,YAAaR,EAAS5B,QACtBsB,SAAU,SAAAP,GAAC,OAAId,EAAWc,EAAEQ,OAAOC,YAIzCxE,EAAAC,EAAAC,cAAA,UACEC,UAAU,kBACVsE,IAAK3B,EACLuB,KAAK,UAHP,0BCnBLgB,EA3BQ,SAAA9E,GAAY,IAATsE,EAAStE,EAATsE,GACxB,OACE7E,EAAAC,EAAAC,cAACgD,EAAA,SAAD,CACEC,SAAUjB,EACVkB,OAAQ,SAACC,EAADyB,GAAyCA,EAA/BvB,KAAQ+B,eAAuB,IACvC9B,EAAcH,EAAMI,UAAU,CAAEC,MAAO1B,IAAvCwB,UACRH,EAAMM,WAAW,CACfD,MAAO1B,EACPuB,KAAM,CAAEC,UAAWA,EAAU+B,OAAO,SAAAX,GAAQ,OAAIA,EAASC,KAAOA,SAInE,SAAAS,GAAc,OACbtF,EAAAC,EAAAC,cAAA,KACEC,UAAU,SACVqF,QAAS,SAAAzB,GACPA,EAAEQ,OAAO5D,UAAUc,IAAI,SAAU,aAAc,aAC/C6D,EAAe,CAAEpB,UAAW,CAAEuB,GAAIZ,OAJtC,aC4BOa,EAzCM,SAAAnF,GAAmB,IAAhBsE,EAAgBtE,EAAhBsE,GAAIf,EAAYvD,EAAZuD,MAC1B,OACE9D,EAAAC,EAAAC,cAACgD,EAAA,SAAD,CACEC,SAAUb,EACVc,OAAQ,SAACC,EAADyB,GAAuC,IAArBa,EAAqBb,EAA7BvB,KAAQoC,aAClBpC,EAAOF,EAAMI,UAAU,CAAEC,MAAO1B,IACtCuB,EAAKC,UAAUoC,QAAQ,SAAAhB,GACjBA,EAASC,KAAOA,IAClBD,EAASd,MAAQ6B,EAAa7B,SAGlCT,EAAMM,WAAW,CACfD,MAAO1B,EACPuB,WAIH,SAAAoC,GACC,OACE3F,EAAAC,EAAAC,cAAA,KACEC,UAAU,+BACVqF,QAAS,WACPG,EAAa,CACXzB,UAAW,CAAEW,MACbgB,mBAAoB,CAClBC,WAAY,WACZH,aAAc,CACZd,KACAiB,WAAY,WACZhC,MAAOA,EAAQ,YCApBiC,EA7BM,SAAAxF,GAAA,IAAGsE,EAAHtE,EAAGsE,GAAIf,EAAPvD,EAAOuD,MAAOd,EAAdzC,EAAcyC,QAASgD,EAAvBzF,EAAuByF,SAAvB,OACnBhG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,eAChBH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,qBAAb,aAEFH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAW6C,IAE5BhD,EAAAC,EAAAC,cAAA,UAAQC,UAAU,eAChBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAhB,IAAgC2D,EAAhC,SACA9D,EAAAC,EAAAC,cAAC+F,EAAiB,CAAEpB,KAAIf,WAE1B9D,EAAAC,EAAAC,cAAA,KAAGgG,KAAK,IAAI/F,UAAU,oBACpBH,EAAAC,EAAAC,cAAA,KACEC,UAAU,cACVqF,QAAS,SAAAzB,GACPA,EAAEE,iBACF+B,EAASnB,OAIf7E,EAAAC,EAAAC,cAAA,KAAGgG,KAAK,IAAI/F,UAAU,qBACpBH,EAAAC,EAAAC,cAACiG,EAAmB,CAAEtB,WCgBfuB,EAnCM,SAAAzD,GAAK,OACxB3C,EAAAC,EAAAC,cAACgD,EAAA,MAAD,CAAOQ,MAAO1B,GACX,SAAAzB,GAA8B,IAA3BwE,EAA2BxE,EAA3BwE,QAASC,EAAkBzE,EAAlByE,MAAOzB,EAAWhD,EAAXgD,KAClB,GAAIwB,EAAS,OAAO/E,EAAAC,EAAAC,cAAC+E,EAAD,MACpB,GAAID,EAAO,gBAAApB,OAAiBoB,EAAMqB,SAFL,IAGrB7C,EAAcD,EAAdC,UAER,OACExD,EAAAC,EAAAC,cAACF,EAAAC,EAAMqG,SAAP,KACEtG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACZqD,GACCA,EAAU+C,IAAI,SAAA3B,GAAQ,OACpB5E,EAAAC,EAAAC,cAACsG,EAADtF,OAAAuF,OAAA,CACEC,IAAK9B,EAASC,IACVD,EAFN,CAGEoB,SAAU,SAAAnB,GACRlC,EAAMgE,QAAQC,KAAd,aAAAhD,OAAgCiB,WAK1C7E,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,kBACPL,EAAAC,EAAAC,cAAA,KACEC,UAAU,4CACV0G,MAAO,CACLC,MAAO,gCCRRC,EAlBH,WACV,OACE/G,EAAAC,EAAAC,cAAC8G,EAAA,EAAD,KACEhH,EAAAC,EAAAC,cAAC+G,EAAD,KACEjH,EAAAC,EAAAC,cAACgH,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWjB,IACjCpG,EAAAC,EAAAC,cAACgH,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,iBAAiBC,UAAW3E,IAC9C1C,EAAAC,EAAAC,cAACgH,EAAA,EAAD,CACEC,OAAK,EACLC,KAAK,gBACLE,OAAQ,SAAA3E,GACN,OAAO3C,EAAAC,EAAAC,cAACqH,EAAD,CAAgB3C,SAAU,CAAEC,GAAIlC,EAAM6E,MAAMC,OAAO5C,YCLhExB,EAAQ,IAAIqE,IAAc,CAC9BC,iBAAkB,SAAAC,GAAM,OAAIA,EAAO/C,IAAM,QAGrCgD,EAAS,IAAIC,IAAa,CAC9BzE,QACA0E,IARU,kDAWNC,EAAO,WACX,OACEhI,EAAAC,EAAAC,cAACgD,EAAA,eAAD,CAAgB2E,OAAQA,GACtB7H,EAAAC,EAAAC,cAAC+H,EAAD,QAKNC,IAASZ,OAAOtH,EAAAC,EAAAC,cAACiI,EAAD,MAAUC,SAASC,cAAc","file":"static/js/main.cb808e89.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Header = () => (\n  <nav className=\"level\">\n    <ul className=\"level-left\">\n      <li className=\"level-item\">\n        <Link to=\"/\">Home</Link>\n      </li>\n      <li className=\"level-item\">\n        <Link to=\"/bookmarks/new\">Create</Link>\n      </li>\n    </ul>\n  </nav>\n);\n\nexport default Header;\n","import React from \"react\";\nimport Header from \"./Header\";\n\nconst Container = ({ children }) => (\n  <div className=\"container\">\n    <Header />\n    {children}\n  </div>\n);\nexport default Container;\n","import React, { useState } from \"react\";\n\nexport default ({ classList } = []) => {\n  const [loadingButton, setLoadingButton] = useState(null);\n  const setLoadingState = isLoading => {\n    loadingButton.disabled = isLoading;\n    isLoading\n      ? loadingButton.classList.add(...classList)\n      : loadingButton.classList.remove(...classList);\n  };\n  return [setLoadingButton, setLoadingState];\n};\n","import gql from \"graphql-tag\";\n\nconst ADD_BOOKMARK = gql`\n  mutation AddBookmark($content: String!) {\n    addBookmark(content: $content) {\n      id\n      content\n    }\n  }\n`;\n\nconst GET_BOOKMARKS = gql`\n  {\n    bookmarks {\n      id\n      content\n      likes\n    }\n  }\n`;\n\nconst DELETE_BOOKMARK = gql`\n  mutation DeleteBookmark($ID: ID) {\n    deleteBookmark(id: $ID) {\n      id\n    }\n  }\n`;\n\nconst GET_BOOKMARK = gql`\n  query Bookmark($id: ID!) {\n    bookmark(id: $id) {\n      id\n      content\n      likes\n    }\n  }\n`;\n\nconst BOOKMARK_LIKE = gql`\n  mutation BookmarkLike($id: ID) {\n    likeBookmark(id: $id) {\n      id\n      likes\n    }\n  }\n`;\n\nconst UPDATE_BOOKMARK = gql`\n  mutation UpdateBookmark($id: ID!, $content: String!) {\n    updateBookmark(id: $id, content: $content) {\n      id\n    }\n  }\n`;\n\nexport { BOOKMARK_LIKE, GET_BOOKMARK, DELETE_BOOKMARK, GET_BOOKMARKS, ADD_BOOKMARK, UPDATE_BOOKMARK };\n","import { Mutation } from \"react-apollo\";\nimport React, { useState } from \"react\";\nimport useLoading from \"../hooks/useLoading\";\nimport { ADD_BOOKMARK, GET_BOOKMARKS } from \"../queries\";\nconst BookmarkCreate = props => {\n  const [setLoadingButton, setLoadingState] = useLoading({\n    classList: [\"is-loading\", \"no-border\"]\n  });\n  const [content, setContent] = useState(\"\");\n\n  return (\n    <Mutation\n      mutation={ADD_BOOKMARK}\n      update={(cache, { data: { addBookmark } }) => {\n        try {\n          const { bookmarks } = cache.readQuery({ query: GET_BOOKMARKS });\n          cache.writeQuery({\n            query: GET_BOOKMARKS,\n            data: { bookmarks: bookmarks.concat([{ ...addBookmark, likes: 0 }]) }\n          });\n        } catch (e) {\n        } finally {\n          setLoadingState(false);\n        }\n      }}\n    >\n      {addBookmark => (\n        <div className=\"bookmark_form\">\n          <h4 className=\"bookmark_form__title\">Add Bookmark</h4>\n          <form\n            onSubmit={e => {\n              e.preventDefault();\n              setLoadingState(true);\n              addBookmark({ variables: { content } });\n              setContent(\"\");\n            }}\n          >\n            <div className=\"field\">\n              <div className=\"control\">\n                <input\n                  autoCorrect=\"false\"\n                  autoCapitalize=\"false\"\n                  className=\"input\"\n                  type=\"text\"\n                  onChange={e => setContent(e.target.value)}\n                />\n              </div>\n            </div>\n            <button\n              className=\"button is-light\"\n              type=\"submit\"\n              ref={setLoadingButton}\n            >\n              Create\n            </button>\n          </form>\n        </div>\n      )}\n    </Mutation>\n  );\n};\n\nexport default BookmarkCreate;\n","import React from \"react\";\n\nconst Loading = () => <a className=\"button is-loading\">Loading</a>;\n\nexport default Loading;\n","import { Mutation, Query } from \"react-apollo\";\nimport React, { useState } from \"react\";\nimport Loading from \"./Loading\";\nimport useLoading from \"./../hooks/useLoading\";\n\nimport { UPDATE_BOOKMARK, GET_BOOKMARKS, GET_BOOKMARK } from \"../queries\";\nconst BookmarkUpdate = ({ bookmark }) => {\n  const [setLoadingButton, setLoadingState] = useLoading({\n    classList: [\"is-loading\", \"no-border\"]\n  });\n  const [content, setContent] = useState(\"\");\n\n  return (\n    <Query query={GET_BOOKMARK} variables={{ id: bookmark.id }}>\n      {({ loading, error, data: { bookmark } }) => {\n        if (loading) return <Loading />;\n        if (error) return `Error!: ${error}`;\n        return (\n          <Mutation\n            mutation={UPDATE_BOOKMARK}\n            refetchQueries={[{ query: GET_BOOKMARKS }]}\n            update={() => setLoadingState(false)}\n          >\n            {updateBookmark => {\n              return (\n                <div className=\"bookmark_form\">\n                  <h4 className=\"bookmark_form__title\">Update Bookmark</h4>\n                  <form\n                    onSubmit={e => {\n                      e.preventDefault();\n                      updateBookmark({\n                        variables: { id: bookmark.id, content }\n                      });\n                      setLoadingState(true);\n                      bookmark.content = content;\n                      setContent(\"\");\n                    }}\n                  >\n                    <div className=\"field\">\n                      <div className=\"control\">\n                        <input\n                          autoCorrect=\"false\"\n                          autoCapitalize=\"false\"\n                          className=\"input\"\n                          type=\"text\"\n                          placeholder={bookmark.content}\n                          onChange={e => setContent(e.target.value)}\n                        />\n                      </div>\n                    </div>\n                    <button\n                      className=\"button is-light\"\n                      ref={setLoadingButton}\n                      type=\"submit\"\n                    >\n                      Update Bookmark\n                    </button>\n                  </form>\n                </div>\n              );\n            }}\n          </Mutation>\n        );\n      }}\n    </Query>\n  );\n};\n\nexport default BookmarkUpdate;\n","import { Mutation } from \"react-apollo\";\nimport React from \"react\";\n\nimport { DELETE_BOOKMARK, GET_BOOKMARKS } from \"./../queries\";\nconst DeleteBookmark = ({ id }) => {\n  return (\n    <Mutation\n      mutation={DELETE_BOOKMARK}\n      update={(cache, { data: { deleteBookmark } }) => {\n        const { bookmarks } = cache.readQuery({ query: GET_BOOKMARKS });\n        cache.writeQuery({\n          query: GET_BOOKMARKS,\n          data: { bookmarks: bookmarks.filter(bookmark => bookmark.id !== id) }\n        });\n      }}\n    >\n      {deleteBookmark => (\n        <i\n          className=\"delete\"\n          onClick={e => {\n            e.target.classList.add(\"button\", \"is-loading\", \"no-border\");\n            deleteBookmark({ variables: { ID: id } });\n          }}\n        >\n          delete\n        </i>\n      )}\n    </Mutation>\n  );\n};\n\nexport default DeleteBookmark;\n","import React from \"react\";\nimport { Mutation } from \"react-apollo\";\nimport { BOOKMARK_LIKE, GET_BOOKMARKS } from \"../queries\";\n\nconst BookmarkLike = ({ id, likes }) => {\n  return (\n    <Mutation\n      mutation={BOOKMARK_LIKE}\n      update={(cache, { data: { likeBookmark } }) => {\n        const data = cache.readQuery({ query: GET_BOOKMARKS });\n        data.bookmarks.forEach(bookmark => {\n          if (bookmark.id === id) {\n            bookmark.likes = likeBookmark.likes;\n          }\n        });\n        cache.writeQuery({\n          query: GET_BOOKMARKS,\n          data\n        });\n      }}\n    >\n      {likeBookmark => {\n        return (\n          <i\n            className=\"fas fa-heart has-text-danger\"\n            onClick={() => {\n              likeBookmark({\n                variables: { id },\n                optimisticResponse: {\n                  __typename: \"Mutation\",\n                  likeBookmark: {\n                    id,\n                    __typename: \"Bookmark\",\n                    likes: likes + 1\n                  }\n                }\n              });\n            }}\n          />\n        );\n      }}\n    </Mutation>\n  );\n};\n\nexport default BookmarkLike;\n","import React from \"react\";\nimport BookmarkDelete from \"./BookmarkDelete\";\nimport BookmarkLike from \"./BookmarkLike\";\n\nconst BookmarkItem = ({ id, likes, content, onUpdate }) => (\n  <div className=\"card\">\n    <header className=\"card-header\">\n      <p className=\"card-header-title\">Bookmark</p>\n    </header>\n    <div className=\"card-content\">\n      <div className=\"content\">{content}</div>\n    </div>\n    <footer className=\"card-footer\">\n      <div className=\"card-footer-item\">\n        <span className=\"card__likes\"> {likes} &nbsp;</span>\n        <BookmarkLike {...{ id, likes }} />\n      </div>\n      <a href=\"#\" className=\"card-footer-item\">\n        <i\n          className=\"fas fa-edit\"\n          onClick={e => {\n            e.preventDefault();\n            onUpdate(id);\n          }}\n        />\n      </a>\n      <a href=\"#\" className=\"card-footer-item \">\n        <BookmarkDelete {...{ id }} />\n      </a>\n    </footer>\n  </div>\n);\n\nexport default BookmarkItem;\n","import React from \"react\";\n\nimport Loading from \"./Loading\";\nimport BookmarkItem from \"./BookmarkItem\";\nimport { Query } from \"react-apollo\";\nimport { Link } from \"react-router-dom\";\nimport { GET_BOOKMARKS } from \"../queries\";\n\nconst BookmarkList = props => (\n  <Query query={GET_BOOKMARKS}>\n    {({ loading, error, data }) => {\n      if (loading) return <Loading />;\n      if (error) return `Error! ${error.message}`;\n      const { bookmarks } = data;\n\n      return (\n        <React.Fragment>\n          <div className=\"cards\">\n            {bookmarks &&\n              bookmarks.map(bookmark => (\n                <BookmarkItem\n                  key={bookmark.id}\n                  {...bookmark}\n                  onUpdate={id => {\n                    props.history.push(`/bookmark/${id}`);\n                  }}\n                />\n              ))}\n          </div>\n          <Link to=\"/bookmarks/new\">\n            <i\n              className=\"fas fa-plus-circle fa-2x has-text-success\"\n              style={{\n                float: \"right\"\n              }}\n            />\n          </Link>\n        </React.Fragment>\n      );\n    }}\n  </Query>\n);\n\nexport default BookmarkList;\n","import React from \"react\";\nimport Container from \"./Container\";\nimport BookmarkCreate from \"./BookmarkCreate\";\nimport BookmarkUpdate from \"./BookmarkUpdate\";\nimport BookmarkList from \"./BookmarkList\";\nimport { HashRouter, Route } from \"react-router-dom\";\n\nconst App = () => {\n  return (\n    <HashRouter>\n      <Container>\n        <Route exact path=\"/\" component={BookmarkList} />\n        <Route exact path=\"/bookmarks/new\" component={BookmarkCreate} />\n        <Route\n          exact\n          path=\"/bookmark/:id\"\n          render={props => {\n            return <BookmarkUpdate bookmark={{ id: props.match.params.id }} />;\n          }}\n        />\n      </Container>\n    </HashRouter>\n  );\n};\n\nexport default App;\n","import \"./styles.scss\";\n\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo\";\nimport App from \"./components/App\";\nconst URI = \"https://apollo-graphql-todo.glitch.me/graphql\"; //replace with your own graphql URI\n\nconst cache = new InMemoryCache({\n  dataIdFromObject: object => object.id || null\n});\n\nconst client = new ApolloClient({\n  cache,\n  uri: URI\n});\n\nconst Root = () => {\n  return (\n    <ApolloProvider client={client}>\n      <App />\n    </ApolloProvider>\n  );\n};\n\nReactDOM.render(<Root />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}