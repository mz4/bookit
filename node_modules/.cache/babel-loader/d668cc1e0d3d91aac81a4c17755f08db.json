{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/matteo/code/bookit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation UpdateTodo($id: ID!, $content: String!) {\\n    updateTodo(id: $id, content: $content) {\\n      id\\n    }\\n  }\\n\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation TodoLike($id: ID) {\\n    likeTodo(id: $id) {\\n      id\\n      likes\\n    }\\n  }\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  query Todo($id: ID!) {\\n    todo(id: $id) {\\n      id\\n      content\\n      likes\\n    }\\n  }\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation DeleteTodo($ID: ID) {\\n    deleteTodo(id: $ID) {\\n      id\\n    }\\n  }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  {\\n    todos {\\n      id\\n      content\\n      likes\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation AddTodo($content: String!) {\\n    addTodo(content: $content) {\\n      id\\n      content\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from \"graphql-tag\";\nvar ADD_TODO = gql(_templateObject());\nvar GET_TODOS = gql(_templateObject2());\nvar DELETE_TODO = gql(_templateObject3());\nvar GET_TODO = gql(_templateObject4());\nvar TODO_LIKE = gql(_templateObject5());\nvar UPDATE_TODO = gql(_templateObject6());\nexport { TODO_LIKE, GET_TODO, DELETE_TODO, GET_TODOS, ADD_TODO, UPDATE_TODO };","map":{"version":3,"sources":["/home/matteo/code/bookit/src/queries/index.js"],"names":["gql","ADD_TODO","GET_TODOS","DELETE_TODO","GET_TODO","TODO_LIKE","UPDATE_TODO"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AAEA,IAAMC,QAAQ,GAAGD,GAAH,mBAAd;AASA,IAAME,SAAS,GAAGF,GAAH,oBAAf;AAUA,IAAMG,WAAW,GAAGH,GAAH,oBAAjB;AAQA,IAAMI,QAAQ,GAAGJ,GAAH,oBAAd;AAUA,IAAMK,SAAS,GAAGL,GAAH,oBAAf;AASA,IAAMM,WAAW,GAAGN,GAAH,oBAAjB;AAQA,SAASK,SAAT,EAAoBD,QAApB,EAA8BD,WAA9B,EAA2CD,SAA3C,EAAsDD,QAAtD,EAAgEK,WAAhE","sourcesContent":["import gql from \"graphql-tag\";\n\nconst ADD_TODO = gql`\n  mutation AddTodo($content: String!) {\n    addTodo(content: $content) {\n      id\n      content\n    }\n  }\n`;\n\nconst GET_TODOS = gql`\n  {\n    todos {\n      id\n      content\n      likes\n    }\n  }\n`;\n\nconst DELETE_TODO = gql`\n  mutation DeleteTodo($ID: ID) {\n    deleteTodo(id: $ID) {\n      id\n    }\n  }\n`;\n\nconst GET_TODO = gql`\n  query Todo($id: ID!) {\n    todo(id: $id) {\n      id\n      content\n      likes\n    }\n  }\n`;\n\nconst TODO_LIKE = gql`\n  mutation TodoLike($id: ID) {\n    likeTodo(id: $id) {\n      id\n      likes\n    }\n  }\n`;\n\nconst UPDATE_TODO = gql`\n  mutation UpdateTodo($id: ID!, $content: String!) {\n    updateTodo(id: $id, content: $content) {\n      id\n    }\n  }\n`;\n\nexport { TODO_LIKE, GET_TODO, DELETE_TODO, GET_TODOS, ADD_TODO, UPDATE_TODO };\n"]},"metadata":{},"sourceType":"module"}